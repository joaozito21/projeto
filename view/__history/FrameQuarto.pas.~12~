unit FrameQuarto;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,
  FMX.ListView.Types, FMX.ListView.Appearances, FMX.ListView.Adapters.Base,
  FMX.Edit, FMX.ListView, FMX.Layouts, FMX.Controls.Presentation, FMX.Objects,
  System.Rtti, System.Bindings.Outputs, Fmx.Bind.Editors, Data.Bind.EngExt,
  Fmx.Bind.DBEngExt, Data.Bind.Components, Data.Bind.DBScope, Data.DB,
  Datasnap.DBClient;

type
  TFrameQuart = class(TFrame)
    Rectop: TRectangle;
    Label1: TLabel;
    CornerButton2: TCornerButton;
    CornerButton1: TCornerButton;
    RecTotal: TRectangle;
    Layout1: TLayout;
    Rectangle1: TRectangle;
    LvQuarto: TListView;
    Layout2: TLayout;
    Label2: TLabel;
    Label3: TLabel;
    Edit1: TEdit;
    Label4: TLabel;
    cdQuarto: TClientDataSet;
    BindSourceDB1: TBindSourceDB;
    BindingsList1: TBindingsList;
    LinkFillControlToField1: TLinkFillControlToField;
    procedure CornerButton1Click(Sender: TObject);
    procedure LvQuartoDblClick(Sender: TObject);
    procedure CornerButton2Click(Sender: TObject);
    procedure Edit1KeyUp(Sender: TObject; var Key: Word; var KeyChar: Char;
      Shift: TShiftState);
  private
    { Private declarations }
  public
    { Public declarations }
     procedure pegardados(texto : string = ' ');
     constructor create(_AOwner:TComponent); override;
    procedure Release;

  end;

 var
    frameQuar:TFrameQuart;

implementation

uses
  FireDAC.Comp.Client,global, FrameCadQuarto, pousada, frameCadastro;

{$R *.fmx}

 procedure TFrameQuart.pegardados(texto : string = ' ');
var
  qry:TFDQuery;
begin


    qry := TFDQuery.Create(self);
    with qry do
    begin
      qry.Connection := FDConnection;
      with qry.SQL do
      begin
        if texto = ' ' then
            add('select * from quarto')
        else
           add('select * from quarto where tipo descricao like ''%'+ texto+'%''')

      end;
      Open;
      cdquarto.EmptyDataSet;
      while not EOF do
      begin
        cdquarto.Insert;
        cdquarto.FieldByName('tipo').AsString := FieldByName('tipo').AsString;
        cdquarto.FieldByName('numero').AsString := FieldByName('numero').AsString;
        cdquarto.FieldByName('id').AsInteger := FieldByName('idquarto').AsInteger;
        cdquarto.Post;
        next;
      end;
      cdquarto.Close;
      cdquarto.Open;
      qry.Close;
    end;
    FDConnection.Close;
    FreeAndNil(qry);
end;


procedure TFrameQuart.CornerButton1Click(Sender: TObject);
begin
  frameCadQuartos := TFrameCadQua.create(FormTelaPrincipal);
  release;
end;

procedure TFrameQuart.CornerButton2Click(Sender: TObject);
begin
  framecad := TFrameCadastros.Create(FormTelaPrincipal);
  release;
end;

constructor TFrameQuart.Create(_AOwner: TComponent);
begin
  inherited;
  Parent := TFmxObject(_AOwner);
  pegardados;
end;

procedure TFrameQuart.Edit1KeyUp(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
begin
  pegardados(key);
end;

procedure TFrameQuart.LvQuartoDblClick(Sender: TObject);
begin
   if Assigned(Lvquarto.Selected) then
   begin

    cdquarto.RecNo:=Lvquarto.Selected.Index+ 1;
    frameCadQuartos := TFrameCadQua.create(FormTelaPrincipal,cdquarto.FieldByName('id').AsInteger,true);
    Release;
   end;
end;

procedure TFrameQuart.Release;
begin
  Name := '';

  FreeOnRelease;
  inherited;

  frameQuar := nil;
end;

end.
